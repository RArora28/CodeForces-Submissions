/* Rishabh Arora
   IIIT-Hyderabad */

#include <bits/stdc++.h>
using namespace std;

typedef pair<int,int> II;
typedef vector<int> VI;
typedef vector<II> VII;
typedef long long int LL;
typedef unsigned long long int ULL;

#define MAXSIZE 100005
#define mod 1000000007
#define rep(i, a, b) for(i = a; i < b; i++)
#define rev(i, a, b) for(i = a; i > b; i--)
#define INF INT_MAX
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SET(a,b) memset(a, b, sizeof(a))

//debugging statements
#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
	cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
	const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

int main() {

  ios::sync_with_stdio(false);	
  cin.tie(NULL);

  LL i, j;
  vector<LL> A;
  LL n;

  cin>>n;
  
  if(n == 1) {
    cout<<"1"<<endl;
    return 0;
  }

  LL sq = sqrt(n)+1;

  rep(i, 1, sq) 
    if(n % i == 0) { 
      A.PB(i);
      A.PB(n/i);
    }

  sort(A.begin(), A.end());

  
  rev(i, A.size()-1, -1) { 
    bool flag = true;
    LL s = sqrt(A[i]);
    
    rep(j, 1, s+1) { 
      if(A[i] % j == 0) { 
	//trace(A[i], j, sqrt(j), A[i]/j, sqrt(A[i]/j));

	if( (j!= 1) && ((int)(sqrt(j)) * ((int)sqrt(j)) == j) || ((int)(sqrt(A[i]/j)) * ((int)sqrt(A[i]/j)) == (A[i]/j)) ) 
	  { 
	    flag = false;
	    break;
	  }
      }
    }
    
    if(flag) { 
      cout<<A[i]<<endl;
      return 0;
    }
  }

  return 0;
}
